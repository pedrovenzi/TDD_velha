        -:    0:Source:velha.cpp
        -:    0:Graph:velha.gcno
        -:    0:Data:velha.gcda
        -:    0:Runs:2
        -:    0:Source is newer than graph
        -:    1:/**
        -:    2: * \file  velha.cpp
        -:    3: */
        -:    4:
        -:    5:
        -:    6:#include "velha.hpp"
        -:    7:using namespace std;
        -:    8:#include <iostream>
        -:    9:#include <cstdlib>
        -:   10:
        -:   11:/** 
        -:   12: * @brief verifica situacao do jogo da velha
        -:   13: * @author Programador 
        -:   14: * @param  velha descreve o parametro
        -:   15: * 
        -:   16: *  Descrever o que a funcao faz
        -:   17: */ 
        -:   18:
       34:   19:int VerificaVelha( int velha[3][3] )
        -:   20:{	
       34:   21:	int linha = 0;
       34:   22:	int coluna = 0;
       34:   23:	int x_cont = 0;
       34:   24:	int o_cont = 0;
       34:   25:	int vazio_cont = 0;
        -:   26:	int jogadas[9];
       34:   27:	int n_jogada = 0;
        -:   28:
      136:   29:	for (linha = 0; linha < 3; linha++) {
      408:   30:		for (coluna = 0; coluna < 3; coluna++) {
      306:   31:			if (velha[linha][coluna] == 1) {
      120:   32:				x_cont++;
        -:   33:			};
      306:   34:			if (velha[linha][coluna] == 2) {
      116:   35:				o_cont++;
        -:   36:			};
      306:   37:			if (velha[linha][coluna] == 0) {
       70:   38:				vazio_cont++;
        -:   39:			};
        -:   40:
      306:   41:			if (coluna == 0){
      102:   42:				jogadas[linha*3] = velha[linha][coluna];
        -:   43:			};
      306:   44:			if (coluna == 1){
      102:   45:				jogadas[linha*3 + 1] = velha[linha][coluna];
        -:   46:			};
      306:   47:			if (coluna == 2){
      102:   48:				jogadas[linha*3 + 2] = velha[linha][coluna];
        -:   49:			};
        -:   50:		};
        -:   51:	};
       34:   52:	if (abs(x_cont) - abs(o_cont) < 2) {
       32:   53:		cout << "Array de Jogadas PossÃ­vel:" << endl;
      320:   54:		for (n_jogada = 0; n_jogada < 9; n_jogada++) {
      288:   55:			cout << n_jogada << " - " << jogadas[n_jogada] << endl;
        -:   56:		};
        -:   57:
       32:   58:		bool condicao_vitoria_x = 0;
       32:   59:		bool condicao_vitoria_o = 0;
        -:   60:
       32:   61:		if ((jogadas[2] == jogadas[5]) && (jogadas[5] == jogadas[8])) {
        4:   62:			if (jogadas[2] == 1) {
        2:   63:				condicao_vitoria_x = 1;
        2:   64:			} else if (jogadas[2] == 2){
        2:   65:				condicao_vitoria_o = 1;
        -:   66:			}
        -:   67:		}
       32:   68:		if ((jogadas[1] == jogadas[4]) && (jogadas[4] == jogadas[7])) {
        4:   69:			if (jogadas[1] == 1) {
        2:   70:				condicao_vitoria_x = 1;
        2:   71:			} else if (jogadas[1] == 2){
        2:   72:				condicao_vitoria_o = 1;
        -:   73:			}
        -:   74:		}
       32:   75:		if ((jogadas[0] == jogadas[3]) && (jogadas[3] == jogadas[6])) {
        4:   76:			if (jogadas[0] == 1) {
        2:   77:				condicao_vitoria_x = 1;
        2:   78:			} else if (jogadas[0] == 2){
        2:   79:				condicao_vitoria_o = 1;
        -:   80:			}
        -:   81:		}
       32:   82:		if ((jogadas[0] == jogadas[4]) && (jogadas[4] == jogadas[8])) {
        4:   83:			if (jogadas[0] == 1) {
        2:   84:				condicao_vitoria_x = 1;
        2:   85:			} else if (jogadas[0] == 2){
        2:   86:				condicao_vitoria_o = 1;
        -:   87:			}
        -:   88:		}
       32:   89:		if ((jogadas[2] == jogadas[4]) && (jogadas[4] == jogadas[6])) {
        4:   90:			if (jogadas[2] == 1) {
        2:   91:				condicao_vitoria_x = 1;
        2:   92:			} else if (jogadas[2] == 2){
        2:   93:				condicao_vitoria_o = 1;
        -:   94:			}
        -:   95:		}
       32:   96:		if ((jogadas[6] == jogadas[7]) && (jogadas[7] == jogadas[8])) {
        4:   97:			if (jogadas[6] == 1) {
        2:   98:				condicao_vitoria_x = 1;
        2:   99:			} else if (jogadas[6] == 2){
        2:  100:				condicao_vitoria_o = 1;
        -:  101:			}
        -:  102:		}
       32:  103:		if ((jogadas[3] == jogadas[4]) && (jogadas[4] == jogadas[5])) {
        4:  104:			if (jogadas[3] == 1) {
        2:  105:				condicao_vitoria_x = 1;
        2:  106:			} else if (jogadas[3] == 2){
        2:  107:				condicao_vitoria_o = 1;
        -:  108:			}
        -:  109:		}
       32:  110:		if ((jogadas[0] == jogadas[1]) && (jogadas[1] == jogadas[2])) {
        4:  111:			if (jogadas[0] == 1) {
        2:  112:				condicao_vitoria_x = 1;
        2:  113:			} else if (jogadas[0] == 2){
        2:  114:				condicao_vitoria_o = 1;
        -:  115:			}
        -:  116:		}
        -:  117:
       32:  118:		if ((condicao_vitoria_x == 1) || (condicao_vitoria_o == 1)) {
       32:  119:			if (condicao_vitoria_x == 1) {
       16:  120:				return 1;
        -:  121:			};
       16:  122:			if (condicao_vitoria_o == 1) {
       16:  123:				return 2;
        -:  124:			};
        -:  125:		};
        -:  126:	} else {
        2:  127:		return -2;
        -:  128:	};
    #####:  129:	return 0; /*!< retorna zero para teste */
        -:  130:}
        -:  131:
